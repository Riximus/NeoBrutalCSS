/*
* Big thanks to Sepideh Yazdi for the colors!
* Link to her dribbble post: https://dribbble.com/shots/20764973-Neobrutalism-UI-How-to
 */

@use "sass:math";

$black: #000000;

$neo-colors: (
        "white": #FFFFFF,
        "blue": #7DF9FF,
        "green": #2FFF2F,
        "pink": #FF00F5,
        "purple": #3300FF,
        "yellow": #FFFF00,
        "orange": #FF4911,
);

$feedback-colors: (
        "danger": #C82333,
        "warning": #FF8C00,
        "success": #4CAF50,
        "info": #17A2B8,
);

$muted-colors: (
        "blue": (
                "lighter": #DAF5F0,
                "light": #A7DBD8,
                "base": #87CEEB,
                "dark": #69D2E7,
        ),
        "green": (
                "lighter": #B5D2AD,
                "light": #BAFCA2,
                "base": #90EE90,
                "dark": #7FBC8C,
        ),
        "pink": (
                "lighter": #FCDFFF,
                "light": #FFC0CB,
                "base": #FFB2EF,
                "dark": #FF69B4,
        ),
        "purple": (
                "lighter": #E3DFF2,
                "light": #C4A1FF,
                "base": #A388EE,
                "dark": #9723C9,
        ),
        "yellow": (
                "lighter": #FDFD96,
                "light": #FFDB58,
                "base": #F4D738,
                "dark": #E3A018,
        ),
        "orange": (
                "lighter": #F8D6B3,
                "light": #FFA07A,
                "base": #FF7A5C,
                "dark": #FF6B6B,
        ),
);

$color-palette: (
        "feedback": $feedback-colors,
        "neo": $neo-colors,
);

/*
 Thank you @itzsrikanth for the color contrast functions!
 Link to the article: https://hackernoon.com/how-to-generate-wcag-compliant-contrast-color-in-bootstrap-uiv310s
 */
@function relative-luminance($color) {

        $r: math.div(red($color), 255);
        $g: math.div(green($color), 255);
        $b: math.div(blue($color), 255);

        $r: if($r < 0.03928, math.div($r, 12.92), math.pow(math.div($r + 0.055, 1.055), 2.4));
        $g: if($g < 0.03928, math.div($g, 12.92), math.pow(math.div($g + 0.055, 1.055), 2.4));
        $b: if($b < 0.03928, math.div($b, 12.92), math.pow(math.div($b + 0.055, 1.055), 2.4));

        @return 0.2126 * $r + 0.7152 * $g + 0.0722 * $b;
}

@function contrast-ratio($background, $foreground) {
        $l1: relative-luminance($background) + 0.05;
        $l2: relative-luminance($foreground) + 0.05;

        @return if($l1 > $l2, math.div($l1, $l2), math.div($l2, $l1));
}

@function set-text-color($background-color) {
        $black: #000000;
        $white: #ffffff;

        $black-contrast: contrast-ratio($background-color, $black);
        $white-contrast: contrast-ratio($background-color, $white);

        @return if($white-contrast > $black-contrast, $white, $black);
}

// TODO remove the transition from the hover classes

// Generate hover utility classes for neo and feedback colors
@each $palette-name, $color-group in $color-palette {
        @each $color-key, $color-value in $color-group {

                // Color classes for each color
                .#{$palette-name}-#{$color-key} {
                        background-color: $color-value !important;
                        color: set-text-color($color-value);
                }

                // Hover color classes for each color
                .#{$palette-name}-#{$color-key}-hover:hover {
                        background-color: $color-value !important;
                        color: set-text-color($color-value);
                }

                // Checked color classes for each color
                .#{$palette-name}-#{$color-key}-checked:checked {
                        background-color: $color-value !important;
                        &::before {
                                border-color: set-text-color($color-value) !important;
                        }
                }
        }
}

// Generate
@each $color-name, $shades in $muted-colors {
        @each $shade-name, $color-value in $shades {

                // Muted color classes for each color
                .muted-#{$color-name}-#{$shade-name} {
                        background-color: $color-value !important;
                        color: set-text-color($color-value);
                }

                // Hover color classes for each color
                .muted-#{$color-name}-#{$shade-name}-hover:hover {
                        background-color: $color-value !important;
                        color: set-text-color($color-value);
                }

                // Checked color classes for each color
                .muted-#{$color-name}-#{$shade-name}-checked:checked {
                        background-color: $color-value !important;
                        &::before {
                                border-color: set-text-color($color-value);
                        }
                }
        }
}
