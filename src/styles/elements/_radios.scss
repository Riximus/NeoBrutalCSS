@use '../mixins/borders';
@use '../mixins/shadows';
@use '../mixins/animations';
@use '../base/colors';
@use '../base/variables';

$white: map-get(colors.$neo-colors, 'white');
$black: colors.$black;

// TODO: do it like the checkboxes with this part as mixin and
//  the two styles with colored circle and "normal" circle as classes

@mixin neo-radio-styles {
	@include borders.neobrutalism-border;
	@include shadows.no-transform-shadow-hover;
	@include animations.transition-time;

	appearance: none;
	width: 1.5em;
	height: 1.5em;
	border-radius: 50%;
	background-color: $white;
	cursor: pointer;
	position: relative;
	display: grid;
	place-content: center;

	&:hover {
		@include shadows.translate-box-shadow;
	}

	&:checked {
		transform: translate(0) translate3d(0, 0, 0);
	}

	&:checked:not(.shadow-fixed) {
		box-shadow: none !important;
	}

	&.shadow-fixed {
		@include shadows.neobrutalism-shadow;
	}

	&:focus {
		@include shadows.hover-shadow-effect;
	}

	&:not(:focus) {
		@include shadows.hover-shadow-effect;
	}

	&:checked {
		&::before {
			transform: scale(1);
		}
	}
}

input[type='radio'].neo-radio {
	@include neo-radio-styles;

	&::before {
		content: '';
		width: 0.6em;
		height: 0.6em;
		border-radius: 50%;
		transform: scale(0);
		transition: variables.$transition-ms transform ease-in-out;
		box-shadow: inset 1em 1em;
	}
}

input[type='radio'].neo-radio-inverted {
	@include neo-radio-styles;

	&::before {
		content: '';
		width: 1.1em;
		height: 1.1em;
		border-radius: 50%;
		transform: scale(0);
		transition: variables.$transition-ms transform ease-in-out;
		box-shadow: inset 1em 1em;
		border: 4px solid $black;
		color: $white;
	}
}
